services:
    proxy:
        image: traefik:v2.5
        command:
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedByDefault=false"
            - "--entrypoints.web.address=:80"
            - "--entrypoints.websecure.address=:443"
            - "--certificatesResolvers.myresolver.acme.httpChallenge.entryPoint=web"
            - "--certificatesResolvers.myresolver.acme.email=youremail@example.com"
            - "--certificatesResolvers.myresolver.acme.storage=/acme.json"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
            - ".docker/config/traefik/acme.json:/acme.json"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.traefik.rule=Host(`proxy.local`)"
            - "traefik.http.routers.traefik.service=api@internal"
            - "traefik.http.routers.traefik.entrypoints=websecure"
            - "traefik.http.routers.traefik.tls.certresolver=myresolver"
        depends_on:
            - mysql
            - redis

    app:
        build:
            context: ./.docker/build/app/
            dockerfile: Dockerfile
        volumes:
            - .:/var/www/
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.backend.rule=Host(`${APP_DOMAIN}`)"
            - "traefik.http.routers.backend.entrypoints=websecure"
            - "traefik.http.routers.backend.tls=true"

    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s

    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s

volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local