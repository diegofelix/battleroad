services:
    proxy:
        image: traefik:v2.5
        command:
            - "--api.insecure=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedByDefault=false"
            - "--entrypoints.web.address=:80"
            - "--entrypoints.websecure.address=:443"
            - "--certificatesResolvers.myresolver.acme.httpChallenge.entryPoint=web"
            - "--certificatesResolvers.myresolver.acme.email=youremail@example.com"
            - "--certificatesResolvers.myresolver.acme.storage=/acme.json"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
            - ".docker/config/traefik/acme.json:/acme.json"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.traefik.rule=Host(`proxy.local`)"
            - "traefik.http.routers.traefik.service=api@internal"
            - "traefik.http.routers.traefik.entrypoints=websecure"
            - "traefik.http.routers.traefik.tls.certresolver=myresolver"
        depends_on:
            - mysql
            - redis

    app:
        build:
            context: ./.docker/build/app/
            dockerfile: Dockerfile
        volumes:
            - .:/var/www/
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.backend.rule=Host(`${APP_DOMAIN}`)"
            - "traefik.http.routers.backend.entrypoints=websecure"
            - "traefik.http.routers.backend.tls=true"
        depends_on:
            - mysql
            - redis

    mysql:
        image: 'mysql:8.3.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_USER=${DB_USERNAME}
            - MYSQL_PASSWORD=${DB_PASSWORD}
            - MYSQL_ALLOW_EMPTY_PASSWORD=false
        volumes:
            - .docker/data/mysql:/var/lib/mysql
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s

    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - .docker/data/redis:/data
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s

    mongo:
        image: mongo:5.0
        volumes:
            - .docker/data/mongodb:/data/db
        command: --auth
        environment:
            - MONGO_INITDB_DATABASE=${DB_DATABASE}
            - MONGO_INITDB_ROOT_USERNAME=${DB_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}

    mongoku:
        image: huggingface/mongoku
        environment:
            - MONGOKU_DEFAULT_HOST=mongodb://app:app@mongo:27017
        depends_on:
            - mongo
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.mongoku.rule=Host(`${MONGOKU_URL}`)"
            - "traefik.http.routers.mongoku.entrypoints=websecure"
            - "traefik.http.routers.mongoku.tls.certresolver=myresolver"
            # - "traefik.http.services.mongoku.loadbalancer.server.port=3100"
